JDK自带线程池的讲解：https://blog.csdn.net/zhou_fan_xi/article/details/83585104
一、ljtao.javase.thread.threadpool.jdk_executors
这个包里面演示的是jdk的Executor工厂类几种创建线程池的方法
二、ljtao.javase.thread.threadpool.jdk_threadpoolexecutor
这个包里面解析的是jdk中的ThreadPoolExecutor

三、skill 包
记录一些Thread使用技巧

四、lock
记录lock的知识点。
1、Java中锁的概念
A、自旋锁：为了不放弃CPU执行事件，循环的使用CAS技术对数据尝试进行更新，直至成功。
B、悲观锁：假定会发生并发冲突，同步所有对数据的相关操作，从读数据就开始上锁。
C、乐观锁：假定没有冲突,在修改数据时如果发现数据跟之前获取的不一致，则读最新数据，修改后重试修改。
D、独享锁（写）：给资源加上写锁，线程可以修改资源，其他线程不能再加锁。（单写）
E:共享锁（读）：给资源加上读锁后只能读不能改，其他线程也只能加读锁，不能加写锁。（多读）
F：可重入锁、不可重入锁：线程拿到一把锁之后，可以自由进入同一把锁所同步的其他代码。
G：公平锁、不公平锁。
几种重要的锁实现方式：synchronized、ReentrantLock、ReentrantReadWriteLock

2、同步关键字synchronized
特性：可重入、独享、悲观锁
锁的范围：类锁、对象锁、锁消除、锁粗化
3、Lock的核心api
A、lock() ：获取锁的方法，若锁被其他线程获取，则等待（阻塞）。
B、lockInterruptibly() :在锁的获取过程中可以中断当前线程。
C、tryLock():尝试非阻塞地获取锁，立即返回。
D、unLock()：释放锁。
